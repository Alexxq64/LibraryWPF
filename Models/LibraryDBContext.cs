// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace LibraryWPF.Models;

public partial class LibraryDBContext : DbContext
{
    public LibraryDBContext(DbContextOptions<LibraryDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Author> Authors { get; set; }

    public virtual DbSet<Book> Books { get; set; }

    public virtual DbSet<BookSeries> BookSeries { get; set; }

    public virtual DbSet<Genre> Genres { get; set; }

    public virtual DbSet<ReadingHistory> ReadingHistories { get; set; }

    public virtual DbSet<Review> Reviews { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<UserFavorite> UserFavorites { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Author>(entity =>
        {
            entity.HasKey(e => e.AuthorID).HasName("PK__Authors__70DAFC143BCB44E3");
        });

        modelBuilder.Entity<Book>(entity =>
        {
            entity.HasKey(e => e.BookID).HasName("PK__Books__3DE0C22773F12DC9");

            entity.Property(e => e.AverageRating).HasDefaultValue(0.0m);
            entity.Property(e => e.IsFree).HasDefaultValue(true);

            entity.HasOne(d => d.Author).WithMany(p => p.Books).HasConstraintName("FK_Books_Authors");

            entity.HasOne(d => d.Series).WithMany(p => p.Books).HasConstraintName("FK_Books_Series");

            entity.HasMany(d => d.Authors).WithMany(p => p.BooksNavigation)
                .UsingEntity<Dictionary<string, object>>(
                    "BookAuthor",
                    r => r.HasOne<Author>().WithMany()
                        .HasForeignKey("AuthorID")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__BookAutho__Autho__44FF419A"),
                    l => l.HasOne<Book>().WithMany()
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__BookAutho__BookI__440B1D61"),
                    j =>
                    {
                        j.HasKey("BookID", "AuthorID").HasName("PK__BookAuth__6AED6DE63EB0DA5D");
                        j.ToTable("BookAuthors");
                    });

            entity.HasMany(d => d.Genres).WithMany(p => p.Books)
                .UsingEntity<Dictionary<string, object>>(
                    "BookGenre",
                    r => r.HasOne<Genre>().WithMany()
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__BookGenre__Genre__5165187F"),
                    l => l.HasOne<Book>().WithMany()
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__BookGenre__BookI__5070F446"),
                    j =>
                    {
                        j.HasKey("BookID", "GenreID").HasName("PK__BookGenr__CDD89272B0A0FE9A");
                        j.ToTable("BookGenres");
                    });
        });

        modelBuilder.Entity<BookSeries>(entity =>
        {
            entity.HasKey(e => e.SeriesID).HasName("PK__BookSeri__F3A1C1015F6D89BC");

            entity.Property(e => e.TotalBooks).HasDefaultValue(0);
        });

        modelBuilder.Entity<Genre>(entity =>
        {
            entity.HasKey(e => e.GenreID).HasName("PK__Genres__0385055EB135CD14");
        });

        modelBuilder.Entity<ReadingHistory>(entity =>
        {
            entity.HasKey(e => e.RecordID).HasName("PK__ReadingH__FBDF78C900286678");

            entity.Property(e => e.IsFinished).HasDefaultValue(false);
            entity.Property(e => e.LastReadDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.ProgressPercent).HasDefaultValue(0m);
            entity.Property(e => e.StartDate).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Book).WithMany(p => p.ReadingHistories)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ReadingHi__BookI__628FA481");

            entity.HasOne(d => d.User).WithMany(p => p.ReadingHistories)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ReadingHi__UserI__619B8048");
        });

        modelBuilder.Entity<Review>(entity =>
        {
            entity.HasKey(e => e.ReviewID).HasName("PK__Reviews__74BC79AE87331A00");

            entity.ToTable(tb => tb.HasTrigger("UpdateReviewTimestamp"));

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdatedAt).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Book).WithMany(p => p.Reviews)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Reviews__BookID__5812160E");

            entity.HasOne(d => d.User).WithMany(p => p.Reviews)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Reviews__UserID__59063A47");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserID).HasName("PK__Users__1788CCAC7930CCDE");

            entity.Property(e => e.RegistrationDate).HasDefaultValueSql("(getdate())");
        });

        modelBuilder.Entity<UserFavorite>(entity =>
        {
            entity.HasKey(e => e.FavoriteID).HasName("PK__UserFavo__CE74FAF55F7D6FFF");

            entity.Property(e => e.AddedDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.SortOrder).HasDefaultValue(0);

            entity.HasOne(d => d.Book).WithMany(p => p.UserFavorites)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__UserFavor__BookI__6A30C649");

            entity.HasOne(d => d.User).WithMany(p => p.UserFavorites)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__UserFavor__UserI__693CA210");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}